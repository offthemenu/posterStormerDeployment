{"ast":null,"code":"var _jsxFileName = \"/Users/manasi/Projects/poster-stormer/poster-stormer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport PromptInput from './Components/PromptInput';\nimport AdditionalOptions from './Components/AdditionalOptions';\nimport PosterDisplay from './Components/PosterDisplay';\nimport mockPosters from './mockData'; // Adjust the path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numberOfPosters, setNumberOfPosters] = useState(0);\n  const [postersToDisplay, setPostersToDisplay] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0); // State to track the current poster index\n\n  const handleGenerate = () => {\n    const selectedPosters = mockPosters.slice(0, numberOfPosters); // Get the first n posters\n    setPostersToDisplay(selectedPosters);\n    setCurrentIndex(0); // Reset to the first poster\n  };\n  const handleNext = () => {\n    if (currentIndex < postersToDisplay.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: \"Poster Stormer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section\",\n        children: [/*#__PURE__*/_jsxDEV(PromptInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AdditionalOptions, {\n          setNumberOfPosters: setNumberOfPosters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerate,\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PosterDisplay, {\n        poster: postersToDisplay[currentIndex],\n        onNext: handleNext,\n        onPrev: handlePrev,\n        canNext: currentIndex < postersToDisplay.length - 1,\n        canPrev: currentIndex > 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pcIrO5465XFPCto9PasL3N8PJpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PromptInput","AdditionalOptions","PosterDisplay","mockPosters","jsxDEV","_jsxDEV","App","_s","numberOfPosters","setNumberOfPosters","postersToDisplay","setPostersToDisplay","currentIndex","setCurrentIndex","handleGenerate","selectedPosters","slice","handleNext","length","handlePrev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","poster","onNext","onPrev","canNext","canPrev","_c","$RefreshReg$"],"sources":["/Users/manasi/Projects/poster-stormer/poster-stormer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport PromptInput from './Components/PromptInput';\nimport AdditionalOptions from './Components/AdditionalOptions';\nimport PosterDisplay from './Components/PosterDisplay';\nimport mockPosters from './mockData'; // Adjust the path if necessary\n\nfunction App() {\n  const [numberOfPosters, setNumberOfPosters] = useState(0);\n  const [postersToDisplay, setPostersToDisplay] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0); // State to track the current poster index\n\n  const handleGenerate = () => {\n    const selectedPosters = mockPosters.slice(0, numberOfPosters); // Get the first n posters\n    setPostersToDisplay(selectedPosters);\n    setCurrentIndex(0); // Reset to the first poster\n  };\n\n  const handleNext = () => {\n    if (currentIndex < postersToDisplay.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        Poster Stormer\n      </header>\n      <div className=\"app-content\">\n        <div className=\"left-section\">\n          <PromptInput />\n          <AdditionalOptions setNumberOfPosters={setNumberOfPosters} />\n          <button onClick={handleGenerate}>Generate</button>\n        </div>\n        <PosterDisplay \n          poster={postersToDisplay[currentIndex]} \n          onNext={handleNext} \n          onPrev={handlePrev} \n          canNext={currentIndex < postersToDisplay.length - 1}\n          canPrev={currentIndex > 0}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}